name: Release

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version-file: ".nvmrc"

      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: |
            **/node_modules
          key: |
            node-${{ hashfiles('**/package-lock.json') }}
          restore-keys: |
            node-

      - name: Install Packages
        run: npm install

      - name: Lint
        uses: trunk-io/trunk-action@v1

      # - name: Format
      #   run: npm run format

  build:
    runs-on: ubuntu-latest

    needs: test

    permissions:
      contents: read
      packages: write

    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version-file: ".nvmrc"

      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: |
            **/node_modules
          key: |
            node-${{ hashfiles('**/package-lock.json') }}
          restore-keys: |
            node-

      - name: Install Packages
        run: npm install

      - name: Get Semantic Version
        id: version
        uses: codacy/git-version@2.2.0
        with:
          release-branch: main
          dev-branch: dev
          prefix: v

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to ghcr
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push container
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest, ${{ steps.version.outputs.version }}

      - name: Tag Commit
        uses: actions/github-script@v5
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.git.createRef({
            owner: context.repo.owner,
            repo: context.repo.repo,
            ref: 'refs/tags/${{ steps.version.outputs.version }}',
            sha: context.sha
            })
